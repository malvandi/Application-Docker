{"@timestamp":"2025-04-30T06:52:04.446199827Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"ir.trader.ApplicationKt","message":"Starting ApplicationKt v0.0.1 using Java 21.0.7 with PID 1 (\/app\/trader-service-0.0.1.jar started by root in \/app)"}
{"@timestamp":"2025-04-30T06:52:04.461074747Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"ir.trader.ApplicationKt","message":"The following 1 profile is active: \"prod\""}
{"@timestamp":"2025-04-30T06:52:08.302454899Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode."}
{"@timestamp":"2025-04-30T06:52:08.504411962Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 175 ms. Found 1 JPA repository interface."}
{"@timestamp":"2025-04-30T06:52:09.099941891Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=e4dafe4d-ced6-30d4-ba05-865195418c4d"}
{"@timestamp":"2025-04-30T06:52:10.808302140Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port 8080 (http)"}
{"@timestamp":"2025-04-30T06:52:10.835235652Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]"}
{"@timestamp":"2025-04-30T06:52:10.836366451Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat\/10.1.40]"}
{"@timestamp":"2025-04-30T06:52:10.894660046Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[\/]","message":"Initializing Spring embedded WebApplicationContext"}
{"@timestamp":"2025-04-30T06:52:10.895657941Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 6275 ms"}
{"@timestamp":"2025-04-30T06:52:11.976614200Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.hibernate.jpa.internal.util.LogHelper","message":"HHH000204: Processing PersistenceUnitInfo [name: default]"}
{"@timestamp":"2025-04-30T06:52:12.131052511Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.hibernate.Version","message":"HHH000412: Hibernate ORM core version 6.6.13.Final"}
{"@timestamp":"2025-04-30T06:52:12.190111769Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","message":"HHH000026: Second-level cache disabled"}
{"@timestamp":"2025-04-30T06:52:12.421814478Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Starting..."}
{"@timestamp":"2025-04-30T06:52:12.450831788Z","level":"WARN","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.postgresql.util.PGPropertyUtil","message":"JDBC URL invalid port number: ${db.port}"}
{"@timestamp":"2025-04-30T06:52:12.451773862Z","level":"WARN","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator","message":"HHH000342: Could not obtain connection to query metadata","error.type":"java.lang.RuntimeException","error.message":"Driver org.postgresql.Driver claims to not accept jdbcUrl, jdbc:postgresql:\/\/postgres:${db.port}\/trader_service","error.stack_trace":"java.lang.RuntimeException: Driver org.postgresql.Driver claims to not accept jdbcUrl, jdbc:postgresql:\/\/postgres:${db.port}\/trader_service\n\tat com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:109)\n\tat com.zaxxer.hikari.pool.PoolBase.initializeDataSource(PoolBase.java:327)\n\tat com.zaxxer.hikari.pool.PoolBase.<init>(PoolBase.java:113)\n\tat com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:91)\n\tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)\n\tat org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)\n\tat org.hibernate.service.ServiceRegistry.requireService(ServiceRegistry.java:68)\n\tat org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:52)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:136)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:247)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)\n\tat io.hypersistence.utils.hibernate.type.HibernateTypesContributor.contribute(HibernateTypesContributor.java:81)\n\tat org.hibernate.boot.internal.MetadataBuilderImpl.applyTypes(MetadataBuilderImpl.java:295)\n\tat java.base\/java.lang.Iterable.forEach(Unknown Source)\n\tat java.base\/java.util.Collections$UnmodifiableCollection.forEach(Unknown Source)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.applyTypeContributors(EntityManagerFactoryBuilderImpl.java:1414)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.applyMetamodelBuilderSettings(EntityManagerFactoryBuilderImpl.java:1395)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:281)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:199)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:54)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1865)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1814)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)\n\tat ir.trader.ApplicationKt.main(Application.kt:13)\n\tat java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)\n\tat java.base\/java.lang.reflect.Method.invoke(Unknown Source)\n\tat org.springframework.boot.loader.launch.Launcher.launch(Launcher.java:102)\n\tat org.springframework.boot.loader.launch.Launcher.launch(Launcher.java:64)\n\tat org.springframework.boot.loader.launch.JarLauncher.main(JarLauncher.java:40)\n"}
{"@timestamp":"2025-04-30T06:52:12.469091603Z","level":"ERROR","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","message":"Failed to initialize JPA EntityManagerFactory: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)"}
{"@timestamp":"2025-04-30T06:52:12.470334733Z","level":"WARN","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org\/springframework\/boot\/autoconfigure\/orm\/jpa\/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)"}
{"@timestamp":"2025-04-30T06:52:12.473529264Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.apache.catalina.core.StandardService","message":"Stopping service [Tomcat]"}
{"@timestamp":"2025-04-30T06:52:12.496408227Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","message":"\n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled."}
{"@timestamp":"2025-04-30T06:52:12.538268628Z","level":"ERROR","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.boot.SpringApplication","message":"Application run failed","error.type":"org.springframework.beans.factory.BeanCreationException","error.message":"Error creating bean with name 'entityManagerFactory' defined in class path resource [org\/springframework\/boot\/autoconfigure\/orm\/jpa\/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)","error.stack_trace":"org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org\/springframework\/boot\/autoconfigure\/orm\/jpa\/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1818)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)\n\tat ir.trader.ApplicationKt.main(Application.kt:13)\n\tat java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)\n\tat java.base\/java.lang.reflect.Method.invoke(Unknown Source)\n\tat org.springframework.boot.loader.launch.Launcher.launch(Launcher.java:102)\n\tat org.springframework.boot.loader.launch.Launcher.launch(Launcher.java:64)\n\tat org.springframework.boot.loader.launch.JarLauncher.main(JarLauncher.java:40)\nCaused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:276)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)\n\tat org.hibernate.service.ServiceRegistry.requireService(ServiceRegistry.java:68)\n\tat org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:52)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:136)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:247)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)\n\tat io.hypersistence.utils.hibernate.type.HibernateTypesContributor.contribute(HibernateTypesContributor.java:81)\n\tat org.hibernate.boot.internal.MetadataBuilderImpl.applyTypes(MetadataBuilderImpl.java:295)\n\tat java.base\/java.lang.Iterable.forEach(Unknown Source)\n\tat java.base\/java.util.Collections$UnmodifiableCollection.forEach(Unknown Source)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.applyTypeContributors(EntityManagerFactoryBuilderImpl.java:1414)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.applyMetamodelBuilderSettings(EntityManagerFactoryBuilderImpl.java:1395)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:281)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:199)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:54)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1865)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1814)\n\t... 20 common frames omitted\nCaused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)\n\tat org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:191)\n\tat org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:87)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentWithDefaults(JdbcEnvironmentInitiator.java:181)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:392)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)\n\t... 42 common frames omitted\n"}
{"@timestamp":"2025-04-30T06:53:35.284656082Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"ir.trader.ApplicationKt","message":"Starting ApplicationKt v0.0.1 using Java 21.0.7 with PID 1 (\/app\/trader-service-0.0.1.jar started by root in \/app)"}
{"@timestamp":"2025-04-30T06:53:35.295061490Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"ir.trader.ApplicationKt","message":"The following 1 profile is active: \"prod\""}
{"@timestamp":"2025-04-30T06:53:38.316768659Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode."}
{"@timestamp":"2025-04-30T06:53:38.421813877Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 83 ms. Found 1 JPA repository interface."}
{"@timestamp":"2025-04-30T06:53:38.847044318Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=e4dafe4d-ced6-30d4-ba05-865195418c4d"}
{"@timestamp":"2025-04-30T06:53:40.032918842Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port 8080 (http)"}
{"@timestamp":"2025-04-30T06:53:40.071212177Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]"}
{"@timestamp":"2025-04-30T06:53:40.072164908Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat\/10.1.40]"}
{"@timestamp":"2025-04-30T06:53:40.124101808Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[\/]","message":"Initializing Spring embedded WebApplicationContext"}
{"@timestamp":"2025-04-30T06:53:40.124950670Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 4716 ms"}
{"@timestamp":"2025-04-30T06:53:40.994284034Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.hibernate.jpa.internal.util.LogHelper","message":"HHH000204: Processing PersistenceUnitInfo [name: default]"}
{"@timestamp":"2025-04-30T06:53:41.168335564Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.hibernate.Version","message":"HHH000412: Hibernate ORM core version 6.6.13.Final"}
{"@timestamp":"2025-04-30T06:53:41.236675632Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","message":"HHH000026: Second-level cache disabled"}
{"@timestamp":"2025-04-30T06:53:41.461266952Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Starting..."}
{"@timestamp":"2025-04-30T06:53:41.473004154Z","level":"WARN","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.postgresql.util.PGPropertyUtil","message":"JDBC URL invalid port number: ${db.port}"}
{"@timestamp":"2025-04-30T06:53:41.473849706Z","level":"WARN","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator","message":"HHH000342: Could not obtain connection to query metadata","error.type":"java.lang.RuntimeException","error.message":"Driver org.postgresql.Driver claims to not accept jdbcUrl, jdbc:postgresql:\/\/postgres:${db.port}\/trader_service","error.stack_trace":"java.lang.RuntimeException: Driver org.postgresql.Driver claims to not accept jdbcUrl, jdbc:postgresql:\/\/postgres:${db.port}\/trader_service\n\tat com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:109)\n\tat com.zaxxer.hikari.pool.PoolBase.initializeDataSource(PoolBase.java:327)\n\tat com.zaxxer.hikari.pool.PoolBase.<init>(PoolBase.java:113)\n\tat com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:91)\n\tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)\n\tat org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)\n\tat org.hibernate.service.ServiceRegistry.requireService(ServiceRegistry.java:68)\n\tat org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:52)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:136)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:247)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)\n\tat io.hypersistence.utils.hibernate.type.HibernateTypesContributor.contribute(HibernateTypesContributor.java:81)\n\tat org.hibernate.boot.internal.MetadataBuilderImpl.applyTypes(MetadataBuilderImpl.java:295)\n\tat java.base\/java.lang.Iterable.forEach(Unknown Source)\n\tat java.base\/java.util.Collections$UnmodifiableCollection.forEach(Unknown Source)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.applyTypeContributors(EntityManagerFactoryBuilderImpl.java:1414)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.applyMetamodelBuilderSettings(EntityManagerFactoryBuilderImpl.java:1395)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:281)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:199)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:54)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1865)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1814)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)\n\tat ir.trader.ApplicationKt.main(Application.kt:13)\n\tat java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)\n\tat java.base\/java.lang.reflect.Method.invoke(Unknown Source)\n\tat org.springframework.boot.loader.launch.Launcher.launch(Launcher.java:102)\n\tat org.springframework.boot.loader.launch.Launcher.launch(Launcher.java:64)\n\tat org.springframework.boot.loader.launch.JarLauncher.main(JarLauncher.java:40)\n"}
{"@timestamp":"2025-04-30T06:53:41.493026016Z","level":"ERROR","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","message":"Failed to initialize JPA EntityManagerFactory: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)"}
{"@timestamp":"2025-04-30T06:53:41.495367865Z","level":"WARN","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org\/springframework\/boot\/autoconfigure\/orm\/jpa\/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)"}
{"@timestamp":"2025-04-30T06:53:41.500843558Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.apache.catalina.core.StandardService","message":"Stopping service [Tomcat]"}
{"@timestamp":"2025-04-30T06:53:41.528307270Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","message":"\n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled."}
{"@timestamp":"2025-04-30T06:53:41.578671539Z","level":"ERROR","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.boot.SpringApplication","message":"Application run failed","error.type":"org.springframework.beans.factory.BeanCreationException","error.message":"Error creating bean with name 'entityManagerFactory' defined in class path resource [org\/springframework\/boot\/autoconfigure\/orm\/jpa\/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)","error.stack_trace":"org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org\/springframework\/boot\/autoconfigure\/orm\/jpa\/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1818)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)\n\tat ir.trader.ApplicationKt.main(Application.kt:13)\n\tat java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)\n\tat java.base\/java.lang.reflect.Method.invoke(Unknown Source)\n\tat org.springframework.boot.loader.launch.Launcher.launch(Launcher.java:102)\n\tat org.springframework.boot.loader.launch.Launcher.launch(Launcher.java:64)\n\tat org.springframework.boot.loader.launch.JarLauncher.main(JarLauncher.java:40)\nCaused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:276)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)\n\tat org.hibernate.service.ServiceRegistry.requireService(ServiceRegistry.java:68)\n\tat org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:52)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:136)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:247)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)\n\tat io.hypersistence.utils.hibernate.type.HibernateTypesContributor.contribute(HibernateTypesContributor.java:81)\n\tat org.hibernate.boot.internal.MetadataBuilderImpl.applyTypes(MetadataBuilderImpl.java:295)\n\tat java.base\/java.lang.Iterable.forEach(Unknown Source)\n\tat java.base\/java.util.Collections$UnmodifiableCollection.forEach(Unknown Source)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.applyTypeContributors(EntityManagerFactoryBuilderImpl.java:1414)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.applyMetamodelBuilderSettings(EntityManagerFactoryBuilderImpl.java:1395)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:281)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:199)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:54)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1865)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1814)\n\t... 20 common frames omitted\nCaused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)\n\tat org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:191)\n\tat org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:87)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentWithDefaults(JdbcEnvironmentInitiator.java:181)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:392)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)\n\t... 42 common frames omitted\n"}
{"@timestamp":"2025-04-30T07:00:55.593793198Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"ir.trader.ApplicationKt","message":"Starting ApplicationKt v0.0.1 using Java 21.0.7 with PID 1 (\/app\/trader-service-0.0.1.jar started by root in \/app)"}
{"@timestamp":"2025-04-30T07:00:55.606829996Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"ir.trader.ApplicationKt","message":"The following 1 profile is active: \"prod\""}
{"@timestamp":"2025-04-30T07:00:58.914556044Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode."}
{"@timestamp":"2025-04-30T07:00:59.022994250Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 63 ms. Found 1 JPA repository interface."}
{"@timestamp":"2025-04-30T07:00:59.512405585Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=e4dafe4d-ced6-30d4-ba05-865195418c4d"}
{"@timestamp":"2025-04-30T07:01:00.796399173Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port 8080 (http)"}
{"@timestamp":"2025-04-30T07:01:00.826272624Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]"}
{"@timestamp":"2025-04-30T07:01:00.827582559Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat\/10.1.40]"}
{"@timestamp":"2025-04-30T07:01:00.890577816Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[\/]","message":"Initializing Spring embedded WebApplicationContext"}
{"@timestamp":"2025-04-30T07:01:00.891735472Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 5169 ms"}
{"@timestamp":"2025-04-30T07:01:01.881353603Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.hibernate.jpa.internal.util.LogHelper","message":"HHH000204: Processing PersistenceUnitInfo [name: default]"}
{"@timestamp":"2025-04-30T07:01:02.096651867Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.hibernate.Version","message":"HHH000412: Hibernate ORM core version 6.6.13.Final"}
{"@timestamp":"2025-04-30T07:01:02.183921742Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","message":"HHH000026: Second-level cache disabled"}
{"@timestamp":"2025-04-30T07:01:02.745604631Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Starting..."}
{"@timestamp":"2025-04-30T07:01:04.266742277Z","level":"WARN","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","message":"SQL Error: 0, SQLState: 28P01"}
{"@timestamp":"2025-04-30T07:01:04.270041690Z","level":"ERROR","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","message":"FATAL: password authentication failed for user \"${db.username}\""}
{"@timestamp":"2025-04-30T07:01:04.273365812Z","level":"WARN","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator","message":"HHH000342: Could not obtain connection to query metadata","error.type":"org.hibernate.exception.GenericJDBCException","error.message":"unable to obtain isolated JDBC connection [FATAL: password authentication failed for user \"${db.username}\"] [n\/a]","error.stack_trace":"org.hibernate.exception.GenericJDBCException: unable to obtain isolated JDBC connection [FATAL: password authentication failed for user \"${db.username}\"] [n\/a]\n\tat org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:63)\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:116)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)\n\tat org.hibernate.service.ServiceRegistry.requireService(ServiceRegistry.java:68)\n\tat org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:52)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:136)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:247)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)\n\tat io.hypersistence.utils.hibernate.type.HibernateTypesContributor.contribute(HibernateTypesContributor.java:81)\n\tat org.hibernate.boot.internal.MetadataBuilderImpl.applyTypes(MetadataBuilderImpl.java:295)\n\tat java.base\/java.lang.Iterable.forEach(Unknown Source)\n\tat java.base\/java.util.Collections$UnmodifiableCollection.forEach(Unknown Source)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.applyTypeContributors(EntityManagerFactoryBuilderImpl.java:1414)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.applyMetamodelBuilderSettings(EntityManagerFactoryBuilderImpl.java:1395)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:281)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:199)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:54)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1865)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1814)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)\n\tat ir.trader.ApplicationKt.main(Application.kt:13)\n\tat java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)\n\tat java.base\/java.lang.reflect.Method.invoke(Unknown Source)\n\tat org.springframework.boot.loader.launch.Launcher.launch(Launcher.java:102)\n\tat org.springframework.boot.loader.launch.Launcher.launch(Launcher.java:64)\n\tat org.springframework.boot.loader.launch.JarLauncher.main(JarLauncher.java:40)\nCaused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user \"${db.username}\"\n\tat org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:704)\n\tat org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:213)\n\tat org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:268)\n\tat org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)\n\tat org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)\n\tat org.postgresql.Driver.makeConnection(Driver.java:446)\n\tat org.postgresql.Driver.connect(Driver.java:298)\n\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)\n\tat com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)\n\tat com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)\n\tat com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)\n\tat com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)\n\tat com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)\n\tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)\n\tat org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)\n\t... 47 common frames omitted\n"}
{"@timestamp":"2025-04-30T07:01:04.308051588Z","level":"ERROR","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","message":"Failed to initialize JPA EntityManagerFactory: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)"}
{"@timestamp":"2025-04-30T07:01:04.311294515Z","level":"WARN","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org\/springframework\/boot\/autoconfigure\/orm\/jpa\/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)"}
{"@timestamp":"2025-04-30T07:01:04.317783807Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.apache.catalina.core.StandardService","message":"Stopping service [Tomcat]"}
{"@timestamp":"2025-04-30T07:01:04.349466952Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","message":"\n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled."}
{"@timestamp":"2025-04-30T07:01:04.399129376Z","level":"ERROR","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.boot.SpringApplication","message":"Application run failed","error.type":"org.springframework.beans.factory.BeanCreationException","error.message":"Error creating bean with name 'entityManagerFactory' defined in class path resource [org\/springframework\/boot\/autoconfigure\/orm\/jpa\/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)","error.stack_trace":"org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org\/springframework\/boot\/autoconfigure\/orm\/jpa\/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1818)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)\n\tat ir.trader.ApplicationKt.main(Application.kt:13)\n\tat java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)\n\tat java.base\/java.lang.reflect.Method.invoke(Unknown Source)\n\tat org.springframework.boot.loader.launch.Launcher.launch(Launcher.java:102)\n\tat org.springframework.boot.loader.launch.Launcher.launch(Launcher.java:64)\n\tat org.springframework.boot.loader.launch.JarLauncher.main(JarLauncher.java:40)\nCaused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:276)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)\n\tat org.hibernate.service.ServiceRegistry.requireService(ServiceRegistry.java:68)\n\tat org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:52)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:136)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:247)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)\n\tat io.hypersistence.utils.hibernate.type.HibernateTypesContributor.contribute(HibernateTypesContributor.java:81)\n\tat org.hibernate.boot.internal.MetadataBuilderImpl.applyTypes(MetadataBuilderImpl.java:295)\n\tat java.base\/java.lang.Iterable.forEach(Unknown Source)\n\tat java.base\/java.util.Collections$UnmodifiableCollection.forEach(Unknown Source)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.applyTypeContributors(EntityManagerFactoryBuilderImpl.java:1414)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.applyMetamodelBuilderSettings(EntityManagerFactoryBuilderImpl.java:1395)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:281)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:199)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:54)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1865)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1814)\n\t... 20 common frames omitted\nCaused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)\n\tat org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:191)\n\tat org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:87)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentWithDefaults(JdbcEnvironmentInitiator.java:181)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:392)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)\n\t... 42 common frames omitted\n"}
{"@timestamp":"2025-04-30T07:03:14.102743644Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"ir.trader.ApplicationKt","message":"Starting ApplicationKt v0.0.1 using Java 21.0.7 with PID 1 (\/app\/trader-service-0.0.1.jar started by root in \/app)"}
{"@timestamp":"2025-04-30T07:03:14.115142954Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"ir.trader.ApplicationKt","message":"The following 1 profile is active: \"prod\""}
{"@timestamp":"2025-04-30T07:03:16.791053481Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode."}
{"@timestamp":"2025-04-30T07:03:16.875394090Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 64 ms. Found 1 JPA repository interface."}
{"@timestamp":"2025-04-30T07:03:17.253761143Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=e4dafe4d-ced6-30d4-ba05-865195418c4d"}
{"@timestamp":"2025-04-30T07:03:18.452943999Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port 8080 (http)"}
{"@timestamp":"2025-04-30T07:03:18.489093603Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]"}
{"@timestamp":"2025-04-30T07:03:18.490379275Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat\/10.1.40]"}
{"@timestamp":"2025-04-30T07:03:18.543651772Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[\/]","message":"Initializing Spring embedded WebApplicationContext"}
{"@timestamp":"2025-04-30T07:03:18.544549391Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 4298 ms"}
{"@timestamp":"2025-04-30T07:03:19.508693318Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.hibernate.jpa.internal.util.LogHelper","message":"HHH000204: Processing PersistenceUnitInfo [name: default]"}
{"@timestamp":"2025-04-30T07:03:19.644484399Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.hibernate.Version","message":"HHH000412: Hibernate ORM core version 6.6.13.Final"}
{"@timestamp":"2025-04-30T07:03:19.760194534Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","message":"HHH000026: Second-level cache disabled"}
{"@timestamp":"2025-04-30T07:03:19.962771415Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Starting..."}
{"@timestamp":"2025-04-30T07:03:20.238535100Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"com.zaxxer.hikari.pool.HikariPool","message":"HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@c335b9"}
{"@timestamp":"2025-04-30T07:03:20.243507320Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Start completed."}
{"@timestamp":"2025-04-30T07:03:20.390473905Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.hibernate.orm.connections.pooling","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined\/unknown\n\tDatabase version: 17.2\n\tAutocommit mode: undefined\/unknown\n\tIsolation level: undefined\/unknown\n\tMinimum pool size: undefined\/unknown\n\tMaximum pool size: undefined\/unknown"}
{"@timestamp":"2025-04-30T07:03:20.894168824Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","message":"No LoadTimeWeaver setup: ignoring JPA class transformer"}
{"@timestamp":"2025-04-30T07:03:23.510152036Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)"}
{"@timestamp":"2025-04-30T07:03:23.603985182Z","level":"WARN","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.hibernate.tool.schema.internal.ExceptionHandlerLoggedImpl","message":"GenerationTarget encountered exception accepting command : Error executing DDL \"create index ac_codalId on activity_report (codal_id)\" via JDBC [ERROR: relation \"ac_codalid\" already exists]","error.type":"org.hibernate.tool.schema.spi.CommandAcceptanceException","error.message":"Error executing DDL \"create index ac_codalId on activity_report (codal_id)\" via JDBC [ERROR: relation \"ac_codalid\" already exists]","error.stack_trace":"org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL \"create index ac_codalId on activity_report (codal_id)\" via JDBC [ERROR: relation \"ac_codalid\" already exists]\n\tat org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)\n\tat org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576)\n\tat org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516)\n\tat org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applyIndexes(AbstractSchemaMigrator.java:361)\n\tat org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:96)\n\tat org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:233)\n\tat org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112)\n\tat org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280)\n\tat org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)\n\tat java.base\/java.util.HashMap.forEach(Unknown Source)\n\tat org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)\n\tat org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)\n\tat org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)\n\tat org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324)\n\tat org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1865)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1814)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)\n\tat ir.trader.ApplicationKt.main(Application.kt:13)\n\tat java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)\n\tat java.base\/java.lang.reflect.Method.invoke(Unknown Source)\n\tat org.springframework.boot.loader.launch.Launcher.launch(Launcher.java:102)\n\tat org.springframework.boot.loader.launch.Launcher.launch(Launcher.java:64)\n\tat org.springframework.boot.loader.launch.JarLauncher.main(JarLauncher.java:40)\nCaused by: org.postgresql.util.PSQLException: ERROR: relation \"ac_codalid\" already exists\n\tat org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2733)\n\tat org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2420)\n\tat org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372)\n\tat org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:517)\n\tat org.postgresql.jdbc.PgStatement.execute(PgStatement.java:434)\n\tat org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:356)\n\tat org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:341)\n\tat org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:317)\n\tat org.postgresql.jdbc.PgStatement.execute(PgStatement.java:312)\n\tat com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)\n\tat com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)\n\tat org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)\n\t... 42 common frames omitted\n"}
{"@timestamp":"2025-04-30T07:03:23.614673762Z","level":"WARN","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.hibernate.tool.schema.internal.ExceptionHandlerLoggedImpl","message":"GenerationTarget encountered exception accepting command : Error executing DDL \"create index ac_code_year_month_period on activity_report (code, year, month, period)\" via JDBC [ERROR: relation \"ac_code_year_month_period\" already exists]","error.type":"org.hibernate.tool.schema.spi.CommandAcceptanceException","error.message":"Error executing DDL \"create index ac_code_year_month_period on activity_report (code, year, month, period)\" via JDBC [ERROR: relation \"ac_code_year_month_period\" already exists]","error.stack_trace":"org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL \"create index ac_code_year_month_period on activity_report (code, year, month, period)\" via JDBC [ERROR: relation \"ac_code_year_month_period\" already exists]\n\tat org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)\n\tat org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:576)\n\tat org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:516)\n\tat org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applyIndexes(AbstractSchemaMigrator.java:361)\n\tat org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:96)\n\tat org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:233)\n\tat org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:112)\n\tat org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:280)\n\tat org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)\n\tat java.base\/java.util.HashMap.forEach(Unknown Source)\n\tat org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)\n\tat org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)\n\tat org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)\n\tat org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324)\n\tat org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1865)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1814)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)\n\tat ir.trader.ApplicationKt.main(Application.kt:13)\n\tat java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)\n\tat java.base\/java.lang.reflect.Method.invoke(Unknown Source)\n\tat org.springframework.boot.loader.launch.Launcher.launch(Launcher.java:102)\n\tat org.springframework.boot.loader.launch.Launcher.launch(Launcher.java:64)\n\tat org.springframework.boot.loader.launch.JarLauncher.main(JarLauncher.java:40)\nCaused by: org.postgresql.util.PSQLException: ERROR: relation \"ac_code_year_month_period\" already exists\n\tat org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2733)\n\tat org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2420)\n\tat org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372)\n\tat org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:517)\n\tat org.postgresql.jdbc.PgStatement.execute(PgStatement.java:434)\n\tat org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:356)\n\tat org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:341)\n\tat org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:317)\n\tat org.postgresql.jdbc.PgStatement.execute(PgStatement.java:312)\n\tat com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)\n\tat com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)\n\tat org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)\n\t... 42 common frames omitted\n"}
{"@timestamp":"2025-04-30T07:03:23.620369738Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'"}
{"@timestamp":"2025-04-30T07:03:24.847040147Z","level":"WARN","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning"}
{"@timestamp":"2025-04-30T07:03:27.438061203Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","message":"Exposing 1 endpoint beneath base path '\/actuator'"}
{"@timestamp":"2025-04-30T07:03:28.104433689Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat started on port 8080 (http) with context path '\/'"}
{"@timestamp":"2025-04-30T07:03:28.118103818Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"ir.trader.ApplicationKt","message":"Started ApplicationKt in 15.241 seconds (process running for 16.566)"}
{"@timestamp":"2025-04-30T07:04:07.019970105Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"ir.trader.ApplicationKt","message":"Starting ApplicationKt v0.0.1 using Java 21.0.7 with PID 1 (\/app\/trader-service-0.0.1.jar started by root in \/app)"}
{"@timestamp":"2025-04-30T07:04:07.034403538Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"ir.trader.ApplicationKt","message":"The following 1 profile is active: \"prod\""}
{"@timestamp":"2025-04-30T07:04:10.563209346Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode."}
{"@timestamp":"2025-04-30T07:04:10.719304545Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 132 ms. Found 1 JPA repository interface."}
{"@timestamp":"2025-04-30T07:04:11.168516865Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=e4dafe4d-ced6-30d4-ba05-865195418c4d"}
{"@timestamp":"2025-04-30T07:04:12.625125065Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port 8080 (http)"}
{"@timestamp":"2025-04-30T07:04:12.660271726Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]"}
{"@timestamp":"2025-04-30T07:04:12.661248289Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat\/10.1.40]"}
{"@timestamp":"2025-04-30T07:04:12.709823060Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[\/]","message":"Initializing Spring embedded WebApplicationContext"}
{"@timestamp":"2025-04-30T07:04:12.710854738Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 5547 ms"}
{"@timestamp":"2025-04-30T07:04:13.757653979Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.hibernate.jpa.internal.util.LogHelper","message":"HHH000204: Processing PersistenceUnitInfo [name: default]"}
{"@timestamp":"2025-04-30T07:04:13.878049261Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.hibernate.Version","message":"HHH000412: Hibernate ORM core version 6.6.13.Final"}
{"@timestamp":"2025-04-30T07:04:13.932921086Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","message":"HHH000026: Second-level cache disabled"}
{"@timestamp":"2025-04-30T07:04:14.184471109Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Starting..."}
{"@timestamp":"2025-04-30T07:04:14.477973795Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"com.zaxxer.hikari.pool.HikariPool","message":"HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@59cde35"}
{"@timestamp":"2025-04-30T07:04:14.481964847Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Start completed."}
{"@timestamp":"2025-04-30T07:04:14.624704287Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.hibernate.orm.connections.pooling","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined\/unknown\n\tDatabase version: 17.2\n\tAutocommit mode: undefined\/unknown\n\tIsolation level: undefined\/unknown\n\tMinimum pool size: undefined\/unknown\n\tMaximum pool size: undefined\/unknown"}
{"@timestamp":"2025-04-30T07:04:15.241367128Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","message":"No LoadTimeWeaver setup: ignoring JPA class transformer"}
{"@timestamp":"2025-04-30T07:04:17.518161491Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)"}
{"@timestamp":"2025-04-30T07:04:17.603362708Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'"}
{"@timestamp":"2025-04-30T07:04:18.930944773Z","level":"WARN","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning"}
{"@timestamp":"2025-04-30T07:04:21.654542028Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","message":"Exposing 1 endpoint beneath base path '\/actuator'"}
{"@timestamp":"2025-04-30T07:04:21.880385526Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat started on port 8080 (http) with context path '\/'"}
{"@timestamp":"2025-04-30T07:04:21.892781466Z","level":"INFO","thread.name":"main","service.name":"Tile-Service","service.version":"0.0.1","logger":"ir.trader.ApplicationKt","message":"Started ApplicationKt in 16.097 seconds (process running for 17.665)"}
